version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      - CHROMA_PERSIST_DIRECTORY=/app/data/chroma
      - UPLOAD_DIR=/app/uploads
    volumes:
      - backend_data:/app/data
      - backend_uploads:/app/uploads
    networks:
      - rag_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ChromaDB Service (Optional - if you want to run ChromaDB separately)
  # Note: The backend includes ChromaDB embedded, but this can be used for scaling
  # chromadb:
  #   image: chromadb/chroma:latest
  #   ports:
  #     - "8001:8000"
  #   volumes:
  #     - chromadb_data:/chroma/chroma
  #   environment:
  #     - CHROMA_SERVER_HOST=0.0.0.0
  #     - CHROMA_SERVER_HTTP_PORT=8000
  #   networks:
  #     - rag_network
  #   restart: unless-stopped

  # Frontend Service (Optional - for development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - rag_network
    restart: unless-stopped

volumes:
  backend_data:
    driver: local
  backend_uploads:
    driver: local
  # chromadb_data:
  #   driver: local

networks:
  rag_network:
    driver: bridge
